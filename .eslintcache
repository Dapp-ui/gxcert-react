[{"/home/lucky/no-backup/cert/src/index.js":"1","/home/lucky/no-backup/cert/src/App.js":"2","/home/lucky/no-backup/cert/src/reportWebVitals.js":"3","/home/lucky/no-backup/cert/src/components.js":"4","/home/lucky/no-backup/cert/src/eos.js":"5","/home/lucky/no-backup/cert/src/ipfs.js":"6","/home/lucky/no-backup/cert/src/image.js":"7"},{"size":543,"mtime":1612347294098,"results":"8","hashOfConfig":"9"},{"size":2597,"mtime":1612354514106,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612338223399,"results":"11","hashOfConfig":"9"},{"size":1464,"mtime":1612349239319,"results":"12","hashOfConfig":"9"},{"size":2292,"mtime":1612354962313,"results":"13","hashOfConfig":"9"},{"size":1236,"mtime":1612345665499,"results":"14","hashOfConfig":"9"},{"size":1085,"mtime":1612344996430,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"ollovp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/home/lucky/no-backup/cert/src/index.js",[],["33","34"],"/home/lucky/no-backup/cert/src/App.js",["35"],"/home/lucky/no-backup/cert/src/reportWebVitals.js",[],"/home/lucky/no-backup/cert/src/components.js",["36","37","38"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as image from \"./image\"\nimport * as ipfs from \"./ipfs\";\nimport \"./certificate.css\";\n\nclass CertificateComponent extends React.Component {\n  componentWillMount() {\n    const that = this;\n    (async () => {\n      try {\n        const imageUrl = await ipfs.getCertificateImage(that.state.ipfs_hash);\n        that.setState({ imageUrl });\n      } catch(err) {\n        console.error(err);\n        return;\n      }\n    })();\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      ipfs_hash: props.ipfs_hash,\n      imageUrl: null,\n      issueser: props.issueser,\n      receiver: props.receiver,\n    }\n  }\n  render() {\n    return (\n      <div class=\"certificate\">\n        <img src={ this.state.imageUrl } width=\"200\" />\n        <p>issueser: { this.state.issueser }</p>\n        <p>receiver: { this.state.receiver }</p>\n      </div>\n    )\n  }\n}\nclass CertificateComponents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      certificates: props.certificates,\n    }\n  }\n  render() {\n    return (\n      <div class=\"certificates\">\n        { this.state.certificates.map((certificate) => {\n          return (\n            <CertificateComponent ipfs_hash={certificate.ipfs_hash} issueser={certificate.issueser} receiver={certificate.receiver} />\n          );\n        }) }\n      </div>\n    );\n  }\n}\n\nexport {\n  CertificateComponents,\n  CertificateComponent\n}\n\n","/home/lucky/no-backup/cert/src/eos.js",["39"],"/home/lucky/no-backup/cert/src/ipfs.js",[],"/home/lucky/no-backup/cert/src/image.js",["40","41"],"\nfunction fileInputToDataURL(element) {\n  return new Promise((resolve, reject) => {\n    const file = element.files[0];\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", () => {\n      resolve(reader.result);\n    }, false);\n    if (file) {\n      reader.readAsDataURL(file);\n      return;\n    }\n    reject();\n  });\n}\n\nfunction createBlobFromImageDataURI(uri) {\n  const byteString = atob(uri.split(\",\")[1]);\n  const mimeType = uri.match( /(:)([a-z\\/]+)(;)/ )[2];\n  for( var i=0, l=byteString.length, content=new Uint8Array(l); l>i; i++ ) {\n    content[i] = byteString.charCodeAt( i ) ;\n  }\n\n  const blob = new Blob([ content ], {\n    type: mimeType,\n  });\n  return blob;\n}\n\nfunction openFile(element) {\n  return new Promise((resolve, reject) => {\n    const file = element.files[0];\n    const reader = new FileReader();\n    reader.addEventListener(\"load\", function() {\n      resolve(reader.result);\n    });\n    if (file) {\n      reader.readAsArrayBuffer(file);\n      return;\n    }\n    reject();\n  });\n}\n\nexport {\n  fileInputToDataURL,\n  createBlobFromImageDataURI,\n}\n",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":16},{"ruleId":"46","severity":1,"message":"51","line":3,"column":13,"nodeType":"48","messageId":"49","endLine":3,"endColumn":18},{"ruleId":"52","severity":1,"message":"53","line":32,"column":9,"nodeType":"54","endLine":32,"endColumn":56},{"ruleId":"46","severity":1,"message":"55","line":7,"column":24,"nodeType":"48","messageId":"49","endLine":7,"endColumn":32},{"ruleId":"56","severity":1,"message":"57","line":19,"column":40,"nodeType":"58","messageId":"59","endLine":19,"endColumn":41,"suggestions":"60"},{"ruleId":"46","severity":1,"message":"61","line":30,"column":10,"nodeType":"48","messageId":"49","endLine":30,"endColumn":18},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'RpcError' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["64","65"],"'openFile' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"66","fix":"67","desc":"68"},{"messageId":"69","fix":"70","desc":"71"},"removeEscape",{"range":"72","text":"73"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"74","text":"75"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[466,467],"",[466,466],"\\"]